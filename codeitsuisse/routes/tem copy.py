circles = (830, 0)
buckets = [[(717, 1033), (717, 1090), (747, 1090), (747, 1033)], [(1289, 2007), (1289, 2042), (1427, 2042), (1427, 2007)], [(757, 365), (757, 407), (760, 407), (760, 365)], [(733, 767), (733, 813), (744, 813), (744, 767)], [(826, 1466), (826, 1551), (863, 1551), (863, 1466)], [(154, 946), (154, 1002), (170, 1002), (170, 946)], [(1478, 1607), (1478, 1621), (1628, 1621), (1628, 1607)], [(693, 817), (693, 846), (737, 846), (737, 817)], [(714, 1008), (714, 1109), (748, 1109), (748, 1008)], [(803, 1302), (803, 1350), (812, 1350), (812, 1302)], [(639, 380), (639, 421), (686, 421), (686, 380)], [(794, 1248), (794, 1280), (810, 1280), (810, 1248)], [(1259, 575), (1259, 612), (1402, 612), (1402, 575)], [(711, 885), (711, 969), (725, 969), (725, 885)], [(758, 177), (758, 251), (763, 251), (763, 177)], [(128, 2945), (128, 2987), (282, 2987), (282, 2945)], [(795, 38), (795, 76), (812, 76), (812, 38)], [(789, 1613), (789, 1643), (832, 1643), (832, 1613)], [(737, 679), (737, 710), (752, 710), (752, 679)], [(1124, 3061), (1124, 3114), (1455, 3114), (1455, 3061)], [(817, 1389), (817, 1431), (828, 1431), (828, 1389)], [(803, 1236), (803, 1243), (842, 1243), (842, 1236)], [(781, 445), (781, 545), (795, 545), (795, 445)], [(534, 1275), (534, 1321), (634, 1321), (634, 1275)], [(775, 1353), (775, 1362), (819, 1362), (819, 1353)], [(739, 1111), (739, 1147), (788, 1147), (788, 1111)], [(787, 34), (787, 77), (834, 77), (834, 34)], [(831, 1645), (831, 1729), (834, 1729), (834, 1645)], [(166, 1567), (166, 1614), (499, 1614), (499, 1567)], [(752, 283), (752, 353), (755, 353), (755, 283)], [(759, 596), (759, 641), (772, 641), (772, 596)], [(812, 1389), (812, 1435), (832, 1435), (832, 1389)]]
pipes = [[(791, 2246), (808, 2263)], [(1058, 1267), (1027, 1298)], [(757, 748), (742, 763)], [(850, 1785), (834, 1801)], [(1107, 949), (1110, 952)], [(669, 2881), (662, 2888)], [(790, 1284), (805, 1299)], [(831, 1438), (834, 1441)], [(700, 972), (734, 1006)], [(753, 409), (783, 439)], [(838, 1805), (829, 1814)], [(849, 1770), (837, 1782)], [(1428, 1906), (1443, 1921)], [(763, 646), (754, 655)], [(782, 1195), (817, 1230)], [(814, 83), (779, 118)], [(98, 1111), (90, 1119)], [(521, 616), (503, 634)], [(921, 3279), (900, 3300)], [(811, 1854), (805, 1860)], [(775, 256), (754, 277)], [(1400, 3142), (1423, 3165)], [(787, 1153), (790, 1156)], [(833, 1555), (818, 1570)], [(826, 1750), (840, 1764)], [(788, 123), (755, 156)], [(753, 355), (759, 361)], [(842, 1817), (807, 1852)], [(816, 1160), (784, 1192)], [(807, 1365), (827, 1385)], [(1507, 1283), (1479, 1311)], [(746, 848), (715, 879)], [(824, 1447), (840, 1463)], [(785, 573), (768, 590)], [(806, 1591), (823, 1608)], [(843, 1731), (830, 1744)], [(725, 716), (752, 743)], [(844, 2524), (847, 2527)], [(762, 549), (782, 569)], [(760, 660), (745, 675)], [(830, 5), (807, 28)], [(467, 1094), (445, 1116)], [(824, 1576), (812, 1588)], [(1510, 2354), (1498, 2366)], [(749, 162), (761, 174)]]

IMG_SIZE = 2048
img = [[-1 for i in range(IMG_SIZE+5)] for j in range(IMG_SIZE+5)]
G = [list() for j in range(len(buckets)+5)]
area = [0 for j in range(len(buckets)+5)]

for b in range(len(buckets)):

    buc = buckets[b]
    left, right, top, bottom = buc[0][0], buc[2][0], buc[0][1], buc[2][1]

    if(left > right):
        buc[0], buc[2] = buc[2], buc[0]
        buc[1], buc[3] = buc[3], buc[1]

    for i in range(top, bottom+1):
        img[left][i] = b
        img[right][i] = b
    for i in range(left, right+1):
        img[i][bottom] = b

    area[b] = (right-left-1)*(bottom-top)
    

for pipe in pipes:
    up, down = pipe
    src, tgt = -1, -1
    if(up[1] > down[1]):
        up, down = down, up
    for i in range(up[1], -1, -1):
        if(img[up[0]][i] != -1):
            src = img[up[0]][i]
            break
    for i in range(down[1], 2049):
        if(img[down[0]][i] != -1):
            tgt = img[down[0]][i]
            break
    if(src != -1 and tgt != -1):
        G[src].append(tgt)

startbuc = -1
for i in range(circles[1], 2049):
    if(img[circles[0]][i] != -1):
        startbuc = img[circles[0]][i]
        break

for b in range(len(buckets)):
    buc = buckets[b]
    left, right, top, bottom = buc[0][0], buc[2][0], buc[0][1], buc[2][1]
    tgt = -1

    for i in range(bottom+1, 2049):
        if(img[left][i] != -1):
            tgt = img[left][i]
            break

    if(tgt != -1):
        G[b].append(tgt)

    tgt = -1
    
    for i in range(bottom+1, 2049):
        if(img[right][i] != -1):
            tgt = img[right][i]
            break
    
    if(tgt != -1):
        G[b].append(tgt)


if(startbuc == -1):
    print(0)
    ##############################

visited = [0 for j in range(len(buckets)+5)]
def dfs(v):
    visited[v] = 1
    for to in G[v]:
        if visited[to]==0:
            dfs(to)
        
img = [[-1 for i in range(IMG_SIZE+5)] for j in range(IMG_SIZE+5)]
for b in range(len(buckets)):
    buc = buckets[b]
    left, right, top, bottom = buc[0][0], buc[2][0], buc[0][1], buc[2][1]
    for j in range(top, bottom):
        for i in range(left+1, right):
            if (img[i][j]==-1) or (img[i][j]!=-1 and area[img[i][j]]<area[b]):
                img[i][j] = b

dfs(startbuc)

ans =0

for i in range(2049):
    for j in range(2049):
        if img[i][j]!=-1 and visited[img[i][j]]==1:
                ans += 1



print(visited)    
print(G)
print("ans", ans)
